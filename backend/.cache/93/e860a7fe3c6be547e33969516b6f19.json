{"id":"lBEc","dependencies":[{"name":"C:\\Users\\ACC\\Desktop\\APH\\Acitizen-Pasco-Hub\\backend\\node_modules\\@azure\\core-http\\dist-esm\\src\\operationParameter.js.map","includedInParent":true,"mtime":1672192592475},{"name":"C:\\Users\\ACC\\Desktop\\APH\\Acitizen-Pasco-Hub\\backend\\package.json","includedInParent":true,"mtime":1672218648515},{"name":"C:\\Users\\ACC\\Desktop\\APH\\Acitizen-Pasco-Hub\\backend\\node_modules\\@azure\\core-http\\package.json","includedInParent":true,"mtime":1672192587139}],"generated":{"js":"\"use strict\";function e(e){return r(e.parameterPath,e.mapper)}function r(e,r){let t;return t=\"string\"==typeof e?e:Array.isArray(e)?e.join(\".\"):r.serializedName}Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.getPathStringFromParameter=e,exports.getPathStringFromParameterPath=r;"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/operationParameter.ts","name":null,"original":{"line":77,"column":0},"generated":{"line":1,"column":0}},{"source":"../../src/operationParameter.ts","name":null,"original":{"line":60,"column":6},"generated":{"line":1,"column":13}},{"source":"../../src/operationParameter.ts","name":null,"original":{"line":60,"column":16},"generated":{"line":1,"column":22}},{"source":"../../src/operationParameter.ts","name":null,"original":{"line":60,"column":43},"generated":{"line":1,"column":24}},{"source":"../../src/operationParameter.ts","name":null,"original":{"line":61,"column":2},"generated":{"line":1,"column":27}},{"source":"../../src/operationParameter.ts","name":null,"original":{"line":61,"column":9},"generated":{"line":1,"column":34}},{"source":"../../src/operationParameter.ts","name":null,"original":{"line":61,"column":40},"generated":{"line":1,"column":36}},{"source":"../../src/operationParameter.ts","name":null,"original":{"line":61,"column":50},"generated":{"line":1,"column":38}},{"source":"../../src/operationParameter.ts","name":null,"original":{"line":61,"column":65},"generated":{"line":1,"column":52}},{"source":"../../src/operationParameter.ts","name":null,"original":{"line":61,"column":75},"generated":{"line":1,"column":54}},{"source":"../../src/operationParameter.ts","name":null,"original":{"line":64,"column":6},"generated":{"line":1,"column":62}},{"source":"../../src/operationParameter.ts","name":null,"original":{"line":64,"column":16},"generated":{"line":1,"column":71}},{"source":"../../src/operationParameter.ts","name":null,"original":{"line":65,"column":2},"generated":{"line":1,"column":73}},{"source":"../../src/operationParameter.ts","name":null,"original":{"line":66,"column":2},"generated":{"line":1,"column":75}},{"source":"../../src/operationParameter.ts","name":null,"original":{"line":68,"column":2},"generated":{"line":1,"column":78}},{"source":"../../src/operationParameter.ts","name":null,"original":{"line":68,"column":6},"generated":{"line":1,"column":82}},{"source":"../../src/operationParameter.ts","name":null,"original":{"line":76,"column":2},"generated":{"line":1,"column":84}},{"source":"../../src/operationParameter.ts","name":null,"original":{"line":70,"column":4},"generated":{"line":1,"column":91}},{"source":"../../src/operationParameter.ts","name":null,"original":{"line":69,"column":31},"generated":{"line":1,"column":93}},{"source":"../../src/operationParameter.ts","name":null,"original":{"line":69,"column":13},"generated":{"line":1,"column":110}},{"source":"../../src/operationParameter.ts","name":null,"original":{"line":70,"column":13},"generated":{"line":1,"column":112}},{"source":"../../src/operationParameter.ts","name":null,"original":{"line":71,"column":13},"generated":{"line":1,"column":114}},{"source":"../../src/operationParameter.ts","name":null,"original":{"line":71,"column":19},"generated":{"line":1,"column":120}},{"source":"../../src/operationParameter.ts","name":null,"original":{"line":71,"column":27},"generated":{"line":1,"column":128}},{"source":"../../src/operationParameter.ts","name":null,"original":{"line":72,"column":13},"generated":{"line":1,"column":131}},{"source":"../../src/operationParameter.ts","name":null,"original":{"line":72,"column":27},"generated":{"line":1,"column":133}},{"source":"../../src/operationParameter.ts","name":null,"original":{"line":72,"column":32},"generated":{"line":1,"column":138}},{"source":"../../src/operationParameter.ts","name":null,"original":{"line":74,"column":13},"generated":{"line":1,"column":143}},{"source":"../../src/operationParameter.ts","name":null,"original":{"line":74,"column":20},"generated":{"line":1,"column":145}},{"source":"../../src/operationParameter.ts","name":null,"original":{"line":77,"column":0},"generated":{"line":1,"column":160}},{"source":"../../src/operationParameter.ts","name":null,"original":{"line":77,"column":0},"generated":{"line":1,"column":167}},{"source":"../../src/operationParameter.ts","name":null,"original":{"line":77,"column":0},"generated":{"line":1,"column":182}},{"source":"../../src/operationParameter.ts","name":null,"original":{"line":77,"column":0},"generated":{"line":1,"column":190}},{"source":"../../src/operationParameter.ts","name":null,"original":{"line":77,"column":0},"generated":{"line":1,"column":203}},{"source":"../../src/operationParameter.ts","name":null,"original":{"line":77,"column":0},"generated":{"line":1,"column":204}},{"source":"../../src/operationParameter.ts","name":null,"original":{"line":77,"column":0},"generated":{"line":1,"column":211}},{"source":"../../src/operationParameter.ts","name":null,"original":{"line":77,"column":0},"generated":{"line":1,"column":215}},{"source":"../../src/operationParameter.ts","name":null,"original":{"line":77,"column":0},"generated":{"line":1,"column":223}},{"source":"../../src/operationParameter.ts","name":null,"original":{"line":77,"column":0},"generated":{"line":1,"column":250}},{"source":"../../src/operationParameter.ts","name":null,"original":{"line":77,"column":0},"generated":{"line":1,"column":252}},{"source":"../../src/operationParameter.ts","name":null,"original":{"line":77,"column":0},"generated":{"line":1,"column":260}},{"source":"../../src/operationParameter.ts","name":null,"original":{"line":77,"column":0},"generated":{"line":1,"column":291}}],"sources":{"../../src/operationParameter.ts":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { Mapper } from \"./serializer\";\nimport { QueryCollectionFormat } from \"./queryCollectionFormat\";\n\n/**\n * A path which describes how to access a particular property in a given object data source. May be a single property name, an array that denotes nested property names, or a set of multiple named properties with paths in the case of complex object values.\n */\nexport type ParameterPath = string | string[] | { [propertyName: string]: ParameterPath };\n\n/**\n * A common interface that all Operation parameter's extend.\n */\nexport interface OperationParameter {\n  /**\n   * The path to this parameter's value in OperationArguments or the object that contains paths for\n   * each property's value in OperationArguments.\n   */\n  parameterPath: ParameterPath;\n\n  /**\n   * The mapper that defines how to validate and serialize this parameter's value.\n   */\n  mapper: Mapper;\n}\n\n/**\n * A parameter for an operation that will be substituted into the operation's request URL.\n */\nexport interface OperationURLParameter extends OperationParameter {\n  /**\n   * Whether or not to skip encoding the URL parameter's value before adding it to the URL.\n   */\n  skipEncoding?: boolean;\n}\n\n/**\n * A parameter for an operation that will be added as a query parameter to the operation's HTTP\n * request.\n */\nexport interface OperationQueryParameter extends OperationParameter {\n  /**\n   * Whether or not to skip encoding the query parameter's value before adding it to the URL.\n   */\n  skipEncoding?: boolean;\n\n  /**\n   * If this query parameter's value is a collection, what type of format should the value be\n   * converted to.\n   */\n  collectionFormat?: QueryCollectionFormat;\n}\n\n/**\n * Get the path to this parameter's value as a dotted string (a.b.c).\n * @param parameter - The parameter to get the path string for.\n * @returns The path to this parameter's value as a dotted string.\n */\nexport function getPathStringFromParameter(parameter: OperationParameter): string {\n  return getPathStringFromParameterPath(parameter.parameterPath, parameter.mapper);\n}\n\nexport function getPathStringFromParameterPath(\n  parameterPath: ParameterPath,\n  mapper: Mapper\n): string {\n  let result: string;\n  if (typeof parameterPath === \"string\") {\n    result = parameterPath;\n  } else if (Array.isArray(parameterPath)) {\n    result = parameterPath.join(\".\");\n  } else {\n    result = mapper.serializedName!;\n  }\n  return result;\n}\n"},"lineCount":null}},"error":null,"hash":"8ab0f32be2fc6cb1df7f7ab09437f215","cacheData":{"env":{}}}