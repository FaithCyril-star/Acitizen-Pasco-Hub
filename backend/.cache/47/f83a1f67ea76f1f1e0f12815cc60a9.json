{"id":"tDMv","dependencies":[{"name":"C:\\Users\\ACC\\Desktop\\APH\\Acitizen-Pasco-Hub\\backend\\node_modules\\@azure\\core-http\\dist-esm\\src\\policies\\requestPolicy.js.map","includedInParent":true,"mtime":1672192597438},{"name":"C:\\Users\\ACC\\Desktop\\APH\\Acitizen-Pasco-Hub\\backend\\package.json","includedInParent":true,"mtime":1672218648515},{"name":"C:\\Users\\ACC\\Desktop\\APH\\Acitizen-Pasco-Hub\\backend\\node_modules\\@azure\\core-http\\package.json","includedInParent":true,"mtime":1672192587139},{"name":"../httpPipelineLogLevel","loc":{"line":3,"column":37,"index":112},"parent":"C:\\Users\\ACC\\Desktop\\APH\\Acitizen-Pasco-Hub\\backend\\node_modules\\@azure\\core-http\\dist-esm\\src\\policies\\requestPolicy.js","resolved":"C:\\Users\\ACC\\Desktop\\APH\\Acitizen-Pasco-Hub\\backend\\node_modules\\@azure\\core-http\\dist-esm\\src\\httpPipelineLogLevel.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.RequestPolicyOptions=exports.BaseRequestPolicy=void 0;var o=require(\"../httpPipelineLogLevel\");class e{constructor(o,e){this._nextPolicy=o,this._options=e}shouldLog(o){return this._options.shouldLog(o)}log(o,e){this._options.log(o,e)}}exports.BaseRequestPolicy=e;class s{constructor(o){this._logger=o}shouldLog(e){return!!this._logger&&e!==o.HttpPipelineLogLevel.OFF&&e<=this._logger.minimumLogLevel}log(o,e){this._logger&&this.shouldLog(o)&&this._logger.log(o,e)}}exports.RequestPolicyOptions=s;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":121,"column":1},"generated":{"line":1,"column":0}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":121,"column":1},"generated":{"line":1,"column":13}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":121,"column":1},"generated":{"line":1,"column":20}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":121,"column":1},"generated":{"line":1,"column":35}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":121,"column":1},"generated":{"line":1,"column":43}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":121,"column":1},"generated":{"line":1,"column":56}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":121,"column":1},"generated":{"line":1,"column":57}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":121,"column":1},"generated":{"line":1,"column":64}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":121,"column":1},"generated":{"line":1,"column":68}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":121,"column":1},"generated":{"line":1,"column":76}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":121,"column":1},"generated":{"line":1,"column":97}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":121,"column":1},"generated":{"line":1,"column":105}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":121,"column":1},"generated":{"line":1,"column":128}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":1,"column":130}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":1,"column":134}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":1,"column":136}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":1,"column":144}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":30,"column":6},"generated":{"line":1,"column":171}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":30,"column":22},"generated":{"line":1,"column":177}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":34,"column":2},"generated":{"line":1,"column":179}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":38,"column":13},"generated":{"line":1,"column":191}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":42,"column":13},"generated":{"line":1,"column":193}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":38,"column":13},"generated":{"line":1,"column":196}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":38,"column":13},"generated":{"line":1,"column":201}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":38,"column":13},"generated":{"line":1,"column":213}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":42,"column":13},"generated":{"line":1,"column":215}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":42,"column":13},"generated":{"line":1,"column":220}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":42,"column":13},"generated":{"line":1,"column":229}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":56,"column":9},"generated":{"line":1,"column":231}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":56,"column":19},"generated":{"line":1,"column":241}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":57,"column":4},"generated":{"line":1,"column":244}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":57,"column":11},"generated":{"line":1,"column":251}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":57,"column":16},"generated":{"line":1,"column":256}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":57,"column":25},"generated":{"line":1,"column":265}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":57,"column":35},"generated":{"line":1,"column":275}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":66,"column":9},"generated":{"line":1,"column":278}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":66,"column":13},"generated":{"line":1,"column":282}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":66,"column":45},"generated":{"line":1,"column":284}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":67,"column":4},"generated":{"line":1,"column":287}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":67,"column":9},"generated":{"line":1,"column":292}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":67,"column":18},"generated":{"line":1,"column":301}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":67,"column":22},"generated":{"line":1,"column":305}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":67,"column":32},"generated":{"line":1,"column":307}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":91,"column":0},"generated":{"line":1,"column":311}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":91,"column":0},"generated":{"line":1,"column":319}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":91,"column":0},"generated":{"line":1,"column":337}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":94,"column":6},"generated":{"line":1,"column":339}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":94,"column":13},"generated":{"line":1,"column":345}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":95,"column":2},"generated":{"line":1,"column":347}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":95,"column":22},"generated":{"line":1,"column":359}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":95,"column":22},"generated":{"line":1,"column":362}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":95,"column":22},"generated":{"line":1,"column":367}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":95,"column":22},"generated":{"line":1,"column":375}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":102,"column":9},"generated":{"line":1,"column":377}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":102,"column":19},"generated":{"line":1,"column":387}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":103,"column":4},"generated":{"line":1,"column":390}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":104,"column":8},"generated":{"line":1,"column":398}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":104,"column":13},"generated":{"line":1,"column":403}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":105,"column":6},"generated":{"line":1,"column":412}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":105,"column":19},"generated":{"line":1,"column":416}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":105,"column":39},"generated":{"line":1,"column":418}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":105,"column":40},"generated":{"line":1,"column":439}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":106,"column":6},"generated":{"line":1,"column":444}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":106,"column":18},"generated":{"line":1,"column":447}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":106,"column":23},"generated":{"line":1,"column":452}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":106,"column":31},"generated":{"line":1,"column":460}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":116,"column":9},"generated":{"line":1,"column":476}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":116,"column":13},"generated":{"line":1,"column":480}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":116,"column":45},"generated":{"line":1,"column":482}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":117,"column":8},"generated":{"line":1,"column":485}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":117,"column":13},"generated":{"line":1,"column":490}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":117,"column":24},"generated":{"line":1,"column":499}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":117,"column":29},"generated":{"line":1,"column":504}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":117,"column":39},"generated":{"line":1,"column":514}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":118,"column":6},"generated":{"line":1,"column":518}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":118,"column":11},"generated":{"line":1,"column":523}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":118,"column":19},"generated":{"line":1,"column":531}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":118,"column":23},"generated":{"line":1,"column":535}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":118,"column":33},"generated":{"line":1,"column":537}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":121,"column":1},"generated":{"line":1,"column":541}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":121,"column":1},"generated":{"line":1,"column":549}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":121,"column":1},"generated":{"line":1,"column":570}}],"sources":{"../../../src/policies/requestPolicy.ts":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\nimport { HttpPipelineLogLevel } from \"../httpPipelineLogLevel\";\nimport { HttpPipelineLogger } from \"../httpPipelineLogger\";\nimport { WebResourceLike } from \"../webResource\";\n\n/**\n * Creates a new RequestPolicy per-request that uses the provided nextPolicy.\n */\nexport type RequestPolicyFactory = {\n  create(nextPolicy: RequestPolicy, options: RequestPolicyOptionsLike): RequestPolicy;\n};\n\n/**\n * The underlying structure of a request policy.\n */\nexport interface RequestPolicy {\n  /**\n   * A method that retrieves an {@link HttpOperationResponse} given a {@link WebResourceLike} describing the request to be made.\n   * @param httpRequest - {@link WebResourceLike} describing the request to be made.\n   */\n  sendRequest(httpRequest: WebResourceLike): Promise<HttpOperationResponse>;\n}\n\n/**\n * The base class from which all request policies derive.\n */\nexport abstract class BaseRequestPolicy implements RequestPolicy {\n  /**\n   * The main method to implement that manipulates a request/response.\n   */\n  protected constructor(\n    /**\n     * The next policy in the pipeline. Each policy is responsible for executing the next one if the request is to continue through the pipeline.\n     */\n    readonly _nextPolicy: RequestPolicy,\n    /**\n     * The options that can be passed to a given request policy.\n     */\n    readonly _options: RequestPolicyOptionsLike\n  ) {}\n\n  /**\n   * Sends a network request based on the given web resource.\n   * @param webResource - A {@link WebResourceLike} that describes a HTTP request to be made.\n   */\n  public abstract sendRequest(webResource: WebResourceLike): Promise<HttpOperationResponse>;\n\n  /**\n   * Get whether or not a log with the provided log level should be logged.\n   * @param logLevel - The log level of the log that will be logged.\n   * @returns Whether or not a log with the provided log level should be logged.\n   */\n  public shouldLog(logLevel: HttpPipelineLogLevel): boolean {\n    return this._options.shouldLog(logLevel);\n  }\n\n  /**\n   * Attempt to log the provided message to the provided logger. If no logger was provided or if\n   * the log level does not meat the logger's threshold, then nothing will be logged.\n   * @param logLevel - The log level of this log.\n   * @param message - The message of this log.\n   */\n  public log(logLevel: HttpPipelineLogLevel, message: string): void {\n    this._options.log(logLevel, message);\n  }\n}\n\n/**\n * Optional properties that can be used when creating a RequestPolicy.\n */\nexport interface RequestPolicyOptionsLike {\n  /**\n   * Get whether or not a log with the provided log level should be logged.\n   * @param logLevel - The log level of the log that will be logged.\n   * @returns Whether or not a log with the provided log level should be logged.\n   */\n  shouldLog(logLevel: HttpPipelineLogLevel): boolean;\n\n  /**\n   * Attempt to log the provided message to the provided logger. If no logger was provided or if\n   * the log level does not meet the logger's threshold, then nothing will be logged.\n   * @param logLevel - The log level of this log.\n   * @param message - The message of this log.\n   */\n  log(logLevel: HttpPipelineLogLevel, message: string): void;\n}\n\n/**\n * Optional properties that can be used when creating a RequestPolicy.\n */\nexport class RequestPolicyOptions {\n  constructor(private _logger?: HttpPipelineLogger) {}\n\n  /**\n   * Get whether or not a log with the provided log level should be logged.\n   * @param logLevel - The log level of the log that will be logged.\n   * @returns Whether or not a log with the provided log level should be logged.\n   */\n  public shouldLog(logLevel: HttpPipelineLogLevel): boolean {\n    return (\n      !!this._logger &&\n      logLevel !== HttpPipelineLogLevel.OFF &&\n      logLevel <= this._logger.minimumLogLevel\n    );\n  }\n\n  /**\n   * Attempt to log the provided message to the provided logger. If no logger was provided or if\n   * the log level does not meet the logger's threshold, then nothing will be logged.\n   * @param logLevel - The log level of this log.\n   * @param message - The message of this log.\n   */\n  public log(logLevel: HttpPipelineLogLevel, message: string): void {\n    if (this._logger && this.shouldLog(logLevel)) {\n      this._logger.log(logLevel, message);\n    }\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"11e28d51cd6f9e7f47662c286811d6e1","cacheData":{"env":{}}}