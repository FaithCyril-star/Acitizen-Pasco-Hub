{"id":"fXca","dependencies":[{"name":"C:\\Users\\ACC\\Desktop\\APH\\Acitizen-Pasco-Hub\\backend\\node_modules\\@opentelemetry\\api\\build\\esm\\context\\context.js.map","includedInParent":true,"mtime":1672192597883},{"name":"C:\\Users\\ACC\\Desktop\\APH\\Acitizen-Pasco-Hub\\backend\\package.json","includedInParent":true,"mtime":1672218648515},{"name":"C:\\Users\\ACC\\Desktop\\APH\\Acitizen-Pasco-Hub\\backend\\node_modules\\@opentelemetry\\api\\package.json","includedInParent":true,"mtime":1672192593858}],"generated":{"js":"\"use strict\";function e(e){return Symbol.for(e)}Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.ROOT_CONTEXT=void 0,exports.createContextKey=e;var t=function(){return function e(t){var n=this;n._currentContext=t?new Map(t):new Map,n.getValue=function(e){return n._currentContext.get(e)},n.setValue=function(t,r){var u=new e(n._currentContext);return u._currentContext.set(t,r),u},n.deleteValue=function(t){var r=new e(n._currentContext);return r._currentContext.delete(t),r}}}(),n=new t;exports.ROOT_CONTEXT=n;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../src/context/context.ts","name":null,"original":{"line":85,"column":55},"generated":{"line":1,"column":0}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":20,"column":6},"generated":{"line":1,"column":13}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":20,"column":16},"generated":{"line":1,"column":22}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":20,"column":33},"generated":{"line":1,"column":24}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":27,"column":2},"generated":{"line":1,"column":27}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":27,"column":9},"generated":{"line":1,"column":34}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":27,"column":16},"generated":{"line":1,"column":41}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":27,"column":20},"generated":{"line":1,"column":45}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":85,"column":55},"generated":{"line":1,"column":48}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":85,"column":55},"generated":{"line":1,"column":55}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":85,"column":55},"generated":{"line":1,"column":70}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":85,"column":55},"generated":{"line":1,"column":78}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":85,"column":55},"generated":{"line":1,"column":91}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":85,"column":55},"generated":{"line":1,"column":92}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":85,"column":55},"generated":{"line":1,"column":99}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":85,"column":55},"generated":{"line":1,"column":103}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":85,"column":55},"generated":{"line":1,"column":111}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":85,"column":55},"generated":{"line":1,"column":129}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":85,"column":55},"generated":{"line":1,"column":131}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":85,"column":55},"generated":{"line":1,"column":139}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":85,"column":55},"generated":{"line":1,"column":156}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":30,"column":0},"generated":{"line":1,"column":158}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":30,"column":0},"generated":{"line":1,"column":162}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":30,"column":0},"generated":{"line":1,"column":164}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":82,"column":0},"generated":{"line":1,"column":175}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":38,"column":2},"generated":{"line":1,"column":182}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":38,"column":2},"generated":{"line":1,"column":191}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":38,"column":14},"generated":{"line":1,"column":193}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":40,"column":4},"generated":{"line":1,"column":196}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":40,"column":10},"generated":{"line":1,"column":200}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":40,"column":17},"generated":{"line":1,"column":202}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":42,"column":4},"generated":{"line":1,"column":207}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":42,"column":9},"generated":{"line":1,"column":209}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":42,"column":27},"generated":{"line":1,"column":225}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":42,"column":43},"generated":{"line":1,"column":227}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":42,"column":47},"generated":{"line":1,"column":231}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":42,"column":51},"generated":{"line":1,"column":235}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":42,"column":68},"generated":{"line":1,"column":238}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":42,"column":72},"generated":{"line":1,"column":242}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":44,"column":4},"generated":{"line":1,"column":246}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":44,"column":9},"generated":{"line":1,"column":248}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":44,"column":20},"generated":{"line":1,"column":257}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":44,"column":21},"generated":{"line":1,"column":266}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":44,"column":37},"generated":{"line":1,"column":269}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":44,"column":37},"generated":{"line":1,"column":276}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":44,"column":42},"generated":{"line":1,"column":278}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":44,"column":58},"generated":{"line":1,"column":294}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":44,"column":62},"generated":{"line":1,"column":298}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":46,"column":4},"generated":{"line":1,"column":302}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":46,"column":9},"generated":{"line":1,"column":304}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":46,"column":20},"generated":{"line":1,"column":313}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":46,"column":21},"generated":{"line":1,"column":322}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":46,"column":34},"generated":{"line":1,"column":324}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":47,"column":6},"generated":{"line":1,"column":327}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":47,"column":12},"generated":{"line":1,"column":331}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":47,"column":22},"generated":{"line":1,"column":333}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":47,"column":26},"generated":{"line":1,"column":337}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":47,"column":38},"generated":{"line":1,"column":339}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":47,"column":43},"generated":{"line":1,"column":341}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":49,"column":6},"generated":{"line":1,"column":358}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":48,"column":6},"generated":{"line":1,"column":365}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":48,"column":14},"generated":{"line":1,"column":367}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":48,"column":30},"generated":{"line":1,"column":383}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":48,"column":34},"generated":{"line":1,"column":387}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":48,"column":39},"generated":{"line":1,"column":389}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":49,"column":13},"generated":{"line":1,"column":392}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":52,"column":4},"generated":{"line":1,"column":395}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":52,"column":9},"generated":{"line":1,"column":397}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":52,"column":23},"generated":{"line":1,"column":409}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":52,"column":24},"generated":{"line":1,"column":418}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":53,"column":6},"generated":{"line":1,"column":421}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":53,"column":12},"generated":{"line":1,"column":425}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":53,"column":22},"generated":{"line":1,"column":427}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":53,"column":26},"generated":{"line":1,"column":431}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":53,"column":38},"generated":{"line":1,"column":433}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":53,"column":43},"generated":{"line":1,"column":435}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":55,"column":6},"generated":{"line":1,"column":452}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":54,"column":6},"generated":{"line":1,"column":459}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":54,"column":14},"generated":{"line":1,"column":461}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":54,"column":30},"generated":{"line":1,"column":477}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":54,"column":37},"generated":{"line":1,"column":484}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":55,"column":13},"generated":{"line":1,"column":487}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":30,"column":0},"generated":{"line":1,"column":491}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":85,"column":13},"generated":{"line":1,"column":494}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":85,"column":37},"generated":{"line":1,"column":496}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":85,"column":41},"generated":{"line":1,"column":500}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":85,"column":55},"generated":{"line":1,"column":502}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":85,"column":55},"generated":{"line":1,"column":510}},{"source":"../../../src/context/context.ts","name":null,"original":{"line":85,"column":55},"generated":{"line":1,"column":523}}],"sources":{"../../../src/context/context.ts":"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context } from './types';\n\n/** Get a key to uniquely identify a context value */\nexport function createContextKey(description: string) {\n  // The specification states that for the same input, multiple calls should\n  // return different keys. Due to the nature of the JS dependency management\n  // system, this creates problems where multiple versions of some package\n  // could hold different keys for the same property.\n  //\n  // Therefore, we use Symbol.for which returns the same key for the same input.\n  return Symbol.for(description);\n}\n\nclass BaseContext implements Context {\n  private _currentContext!: Map<symbol, unknown>;\n\n  /**\n   * Construct a new context which inherits values from an optional parent context.\n   *\n   * @param parentContext a context from which to inherit values\n   */\n  constructor(parentContext?: Map<symbol, unknown>) {\n    // for minification\n    const self = this;\n\n    self._currentContext = parentContext ? new Map(parentContext) : new Map();\n\n    self.getValue = (key: symbol) => self._currentContext.get(key);\n\n    self.setValue = (key: symbol, value: unknown): Context => {\n      const context = new BaseContext(self._currentContext);\n      context._currentContext.set(key, value);\n      return context;\n    };\n\n    self.deleteValue = (key: symbol): Context => {\n      const context = new BaseContext(self._currentContext);\n      context._currentContext.delete(key);\n      return context;\n    };\n  }\n\n  /**\n   * Get a value from the context.\n   *\n   * @param key key which identifies a context value\n   */\n  public getValue!: (key: symbol) => unknown;\n\n  /**\n   * Create a new context which inherits from this context and has\n   * the given key set to the given value.\n   *\n   * @param key context key for which to set the value\n   * @param value value to set for the given key\n   */\n  public setValue!: (key: symbol, value: unknown) => Context;\n\n  /**\n   * Return a new context which inherits from this context but does\n   * not contain a value for the given key.\n   *\n   * @param key context key for which to clear a value\n   */\n  public deleteValue!: (key: symbol) => Context;\n}\n\n/** The root context is used as the default parent context when there is no active context */\nexport const ROOT_CONTEXT: Context = new BaseContext();\n"},"lineCount":null}},"error":null,"hash":"c2175dc7902989ddb88b7b27841b71ef","cacheData":{"env":{}}}