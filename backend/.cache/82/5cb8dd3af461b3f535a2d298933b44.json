{"id":"mOtb","dependencies":[{"name":"C:\\Users\\ACC\\Desktop\\APH\\Acitizen-Pasco-Hub\\backend\\node_modules\\@azure\\core-http\\dist-esm\\src\\credentials\\accessTokenCache.js.map","includedInParent":true,"mtime":1672192587443},{"name":"C:\\Users\\ACC\\Desktop\\APH\\Acitizen-Pasco-Hub\\backend\\package.json","includedInParent":true,"mtime":1672218648515},{"name":"C:\\Users\\ACC\\Desktop\\APH\\Acitizen-Pasco-Hub\\backend\\node_modules\\@azure\\core-http\\package.json","includedInParent":true,"mtime":1672192587139}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.TokenRefreshBufferMs=exports.ExpiringAccessTokenCache=void 0;const e=12e4;exports.TokenRefreshBufferMs=e;class s{constructor(s=e){this.cachedToken=void 0,this.tokenRefreshBufferMs=s}setCachedToken(e){this.cachedToken=e}getCachedToken(){return this.cachedToken&&Date.now()+this.tokenRefreshBufferMs>=this.cachedToken.expiresOnTimestamp&&(this.cachedToken=void 0),this.cachedToken}}exports.ExpiringAccessTokenCache=s;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../src/credentials/accessTokenCache.ts","name":null,"original":{"line":70,"column":1},"generated":{"line":1,"column":0}},{"source":"../../../src/credentials/accessTokenCache.ts","name":null,"original":{"line":70,"column":1},"generated":{"line":1,"column":13}},{"source":"../../../src/credentials/accessTokenCache.ts","name":null,"original":{"line":70,"column":1},"generated":{"line":1,"column":20}},{"source":"../../../src/credentials/accessTokenCache.ts","name":null,"original":{"line":70,"column":1},"generated":{"line":1,"column":35}},{"source":"../../../src/credentials/accessTokenCache.ts","name":null,"original":{"line":70,"column":1},"generated":{"line":1,"column":43}},{"source":"../../../src/credentials/accessTokenCache.ts","name":null,"original":{"line":70,"column":1},"generated":{"line":1,"column":56}},{"source":"../../../src/credentials/accessTokenCache.ts","name":null,"original":{"line":70,"column":1},"generated":{"line":1,"column":57}},{"source":"../../../src/credentials/accessTokenCache.ts","name":null,"original":{"line":70,"column":1},"generated":{"line":1,"column":64}},{"source":"../../../src/credentials/accessTokenCache.ts","name":null,"original":{"line":70,"column":1},"generated":{"line":1,"column":68}},{"source":"../../../src/credentials/accessTokenCache.ts","name":null,"original":{"line":70,"column":1},"generated":{"line":1,"column":76}},{"source":"../../../src/credentials/accessTokenCache.ts","name":null,"original":{"line":70,"column":1},"generated":{"line":1,"column":97}},{"source":"../../../src/credentials/accessTokenCache.ts","name":null,"original":{"line":70,"column":1},"generated":{"line":1,"column":105}},{"source":"../../../src/credentials/accessTokenCache.ts","name":null,"original":{"line":70,"column":1},"generated":{"line":1,"column":135}},{"source":"../../../src/credentials/accessTokenCache.ts","name":null,"original":{"line":9,"column":7},"generated":{"line":1,"column":137}},{"source":"../../../src/credentials/accessTokenCache.ts","name":null,"original":{"line":9,"column":13},"generated":{"line":1,"column":143}},{"source":"../../../src/credentials/accessTokenCache.ts","name":null,"original":{"line":9,"column":36},"generated":{"line":1,"column":145}},{"source":"../../../src/credentials/accessTokenCache.ts","name":null,"original":{"line":30,"column":0},"generated":{"line":1,"column":150}},{"source":"../../../src/credentials/accessTokenCache.ts","name":null,"original":{"line":30,"column":0},"generated":{"line":1,"column":158}},{"source":"../../../src/credentials/accessTokenCache.ts","name":null,"original":{"line":30,"column":0},"generated":{"line":1,"column":179}},{"source":"../../../src/credentials/accessTokenCache.ts","name":null,"original":{"line":37,"column":6},"generated":{"line":1,"column":181}},{"source":"../../../src/credentials/accessTokenCache.ts","name":null,"original":{"line":37,"column":13},"generated":{"line":1,"column":187}},{"source":"../../../src/credentials/accessTokenCache.ts","name":null,"original":{"line":45,"column":2},"generated":{"line":1,"column":189}},{"source":"../../../src/credentials/accessTokenCache.ts","name":null,"original":{"line":45,"column":14},"generated":{"line":1,"column":201}},{"source":"../../../src/credentials/accessTokenCache.ts","name":null,"original":{"line":45,"column":45},"generated":{"line":1,"column":203}},{"source":"../../../src/credentials/accessTokenCache.ts","name":null,"original":{"line":39,"column":10},"generated":{"line":1,"column":206}},{"source":"../../../src/credentials/accessTokenCache.ts","name":null,"original":{"line":39,"column":10},"generated":{"line":1,"column":211}},{"source":"../../../src/credentials/accessTokenCache.ts","name":null,"original":{"line":39,"column":38},"generated":{"line":1,"column":228}},{"source":"../../../src/credentials/accessTokenCache.ts","name":null,"original":{"line":46,"column":4},"generated":{"line":1,"column":230}},{"source":"../../../src/credentials/accessTokenCache.ts","name":null,"original":{"line":46,"column":9},"generated":{"line":1,"column":235}},{"source":"../../../src/credentials/accessTokenCache.ts","name":null,"original":{"line":46,"column":32},"generated":{"line":1,"column":256}},{"source":"../../../src/credentials/accessTokenCache.ts","name":null,"original":{"line":53,"column":2},"generated":{"line":1,"column":258}},{"source":"../../../src/credentials/accessTokenCache.ts","name":null,"original":{"line":53,"column":17},"generated":{"line":1,"column":273}},{"source":"../../../src/credentials/accessTokenCache.ts","name":null,"original":{"line":54,"column":4},"generated":{"line":1,"column":276}},{"source":"../../../src/credentials/accessTokenCache.ts","name":null,"original":{"line":54,"column":9},"generated":{"line":1,"column":281}},{"source":"../../../src/credentials/accessTokenCache.ts","name":null,"original":{"line":54,"column":23},"generated":{"line":1,"column":293}},{"source":"../../../src/credentials/accessTokenCache.ts","name":null,"original":{"line":60,"column":2},"generated":{"line":1,"column":295}},{"source":"../../../src/credentials/accessTokenCache.ts","name":null,"original":{"line":68,"column":4},"generated":{"line":1,"column":312}},{"source":"../../../src/credentials/accessTokenCache.ts","name":null,"original":{"line":62,"column":6},"generated":{"line":1,"column":319}},{"source":"../../../src/credentials/accessTokenCache.ts","name":null,"original":{"line":62,"column":11},"generated":{"line":1,"column":324}},{"source":"../../../src/credentials/accessTokenCache.ts","name":null,"original":{"line":63,"column":6},"generated":{"line":1,"column":337}},{"source":"../../../src/credentials/accessTokenCache.ts","name":null,"original":{"line":63,"column":11},"generated":{"line":1,"column":342}},{"source":"../../../src/credentials/accessTokenCache.ts","name":null,"original":{"line":63,"column":19},"generated":{"line":1,"column":348}},{"source":"../../../src/credentials/accessTokenCache.ts","name":null,"original":{"line":63,"column":24},"generated":{"line":1,"column":353}},{"source":"../../../src/credentials/accessTokenCache.ts","name":null,"original":{"line":63,"column":48},"generated":{"line":1,"column":375}},{"source":"../../../src/credentials/accessTokenCache.ts","name":null,"original":{"line":63,"column":53},"generated":{"line":1,"column":380}},{"source":"../../../src/credentials/accessTokenCache.ts","name":null,"original":{"line":63,"column":65},"generated":{"line":1,"column":392}},{"source":"../../../src/credentials/accessTokenCache.ts","name":null,"original":{"line":65,"column":6},"generated":{"line":1,"column":413}},{"source":"../../../src/credentials/accessTokenCache.ts","name":null,"original":{"line":65,"column":11},"generated":{"line":1,"column":418}},{"source":"../../../src/credentials/accessTokenCache.ts","name":null,"original":{"line":65,"column":25},"generated":{"line":1,"column":435}},{"source":"../../../src/credentials/accessTokenCache.ts","name":null,"original":{"line":68,"column":11},"generated":{"line":1,"column":438}},{"source":"../../../src/credentials/accessTokenCache.ts","name":null,"original":{"line":68,"column":16},"generated":{"line":1,"column":443}},{"source":"../../../src/credentials/accessTokenCache.ts","name":null,"original":{"line":70,"column":1},"generated":{"line":1,"column":456}},{"source":"../../../src/credentials/accessTokenCache.ts","name":null,"original":{"line":70,"column":1},"generated":{"line":1,"column":464}},{"source":"../../../src/credentials/accessTokenCache.ts","name":null,"original":{"line":70,"column":1},"generated":{"line":1,"column":489}}],"sources":{"../../../src/credentials/accessTokenCache.ts":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AccessToken } from \"@azure/core-auth\";\n\n/**\n * Defines the default token refresh buffer duration.\n */\nexport const TokenRefreshBufferMs = 2 * 60 * 1000; // 2 Minutes\n\n/**\n * Provides a cache for an AccessToken that was that\n * was returned from a TokenCredential.\n */\nexport interface AccessTokenCache {\n  /**\n   * Sets the cached token.\n   *\n   * @param accessToken - The {@link AccessToken} to be cached or null to\n   *        clear the cached token.\n   */\n  setCachedToken(accessToken: AccessToken | undefined): void;\n\n  /**\n   * Returns the cached {@link AccessToken} or undefined if nothing is cached.\n   */\n  getCachedToken(): AccessToken | undefined;\n}\n\n/**\n * Provides an {@link AccessTokenCache} implementation which clears\n * the cached {@link AccessToken}'s after the expiresOnTimestamp has\n * passed.\n *\n * @deprecated No longer used in the bearer authorization policy.\n */\nexport class ExpiringAccessTokenCache implements AccessTokenCache {\n  private tokenRefreshBufferMs: number;\n  private cachedToken?: AccessToken = undefined;\n\n  /**\n   * Constructs an instance of {@link ExpiringAccessTokenCache} with\n   * an optional expiration buffer time.\n   */\n  constructor(tokenRefreshBufferMs: number = TokenRefreshBufferMs) {\n    this.tokenRefreshBufferMs = tokenRefreshBufferMs;\n  }\n\n  /**\n   * Saves an access token into the internal in-memory cache.\n   * @param accessToken - Access token or undefined to clear the cache.\n   */\n  setCachedToken(accessToken: AccessToken | undefined): void {\n    this.cachedToken = accessToken;\n  }\n\n  /**\n   * Returns the cached access token, or `undefined` if one is not cached or the cached one is expiring soon.\n   */\n  getCachedToken(): AccessToken | undefined {\n    if (\n      this.cachedToken &&\n      Date.now() + this.tokenRefreshBufferMs >= this.cachedToken.expiresOnTimestamp\n    ) {\n      this.cachedToken = undefined;\n    }\n\n    return this.cachedToken;\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"a24bd25ce3654533fa8364446b88ddf0","cacheData":{"env":{}}}