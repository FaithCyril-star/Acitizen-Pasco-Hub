{"id":"OXXT","dependencies":[{"name":"C:\\Users\\ACC\\Desktop\\APH\\Acitizen-Pasco-Hub\\backend\\node_modules\\@azure\\core-http\\dist-esm\\src\\restError.js.map","includedInParent":true,"mtime":1672192597638},{"name":"C:\\Users\\ACC\\Desktop\\APH\\Acitizen-Pasco-Hub\\backend\\package.json","includedInParent":true,"mtime":1672218648515},{"name":"C:\\Users\\ACC\\Desktop\\APH\\Acitizen-Pasco-Hub\\backend\\node_modules\\@azure\\core-http\\package.json","includedInParent":true,"mtime":1672192587139},{"name":"./util/sanitizer","loc":{"line":3,"column":26,"index":101},"parent":"C:\\Users\\ACC\\Desktop\\APH\\Acitizen-Pasco-Hub\\backend\\node_modules\\@azure\\core-http\\dist-esm\\src\\restError.js","resolved":"C:\\Users\\ACC\\Desktop\\APH\\Acitizen-Pasco-Hub\\backend\\node_modules\\@azure\\core-http\\dist-esm\\src\\util\\sanitizer.js"},{"name":"./util/inspect","loc":{"line":4,"column":23,"index":144},"parent":"C:\\Users\\ACC\\Desktop\\APH\\Acitizen-Pasco-Hub\\backend\\node_modules\\@azure\\core-http\\dist-esm\\src\\restError.js","resolved":"C:\\Users\\ACC\\Desktop\\APH\\Acitizen-Pasco-Hub\\backend\\node_modules\\@azure\\core-http\\dist-esm\\src\\util\\inspect.browser.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.RestError=void 0;var e=require(\"./util/sanitizer\"),t=require(\"./util/inspect\");const r=new e.Sanitizer;class s extends Error{constructor(e,t,r,i,o){super(e),this.name=\"RestError\",this.code=t,this.statusCode=r,this.request=i,this.response=o,Object.setPrototypeOf(this,s.prototype)}[t.custom](){return`RestError: ${this.message} \\n ${r.sanitize(this)}`}}exports.RestError=s,s.REQUEST_SEND_ERROR=\"REQUEST_SEND_ERROR\",s.PARSE_ERROR=\"PARSE_ERROR\";"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/restError.ts","name":null,"original":{"line":22,"column":53},"generated":{"line":1,"column":0}},{"source":"../../src/restError.ts","name":null,"original":{"line":22,"column":53},"generated":{"line":1,"column":13}},{"source":"../../src/restError.ts","name":null,"original":{"line":22,"column":53},"generated":{"line":1,"column":20}},{"source":"../../src/restError.ts","name":null,"original":{"line":22,"column":53},"generated":{"line":1,"column":35}},{"source":"../../src/restError.ts","name":null,"original":{"line":22,"column":53},"generated":{"line":1,"column":43}},{"source":"../../src/restError.ts","name":null,"original":{"line":22,"column":53},"generated":{"line":1,"column":56}},{"source":"../../src/restError.ts","name":null,"original":{"line":22,"column":53},"generated":{"line":1,"column":57}},{"source":"../../src/restError.ts","name":null,"original":{"line":22,"column":53},"generated":{"line":1,"column":64}},{"source":"../../src/restError.ts","name":null,"original":{"line":22,"column":53},"generated":{"line":1,"column":68}},{"source":"../../src/restError.ts","name":null,"original":{"line":22,"column":53},"generated":{"line":1,"column":76}},{"source":"../../src/restError.ts","name":null,"original":{"line":22,"column":53},"generated":{"line":1,"column":91}},{"source":"../../src/restError.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":1,"column":93}},{"source":"../../src/restError.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":1,"column":97}},{"source":"../../src/restError.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":1,"column":99}},{"source":"../../src/restError.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":1,"column":107}},{"source":"../../src/restError.ts","name":null,"original":{"line":7,"column":0},"generated":{"line":1,"column":127}},{"source":"../../src/restError.ts","name":null,"original":{"line":7,"column":0},"generated":{"line":1,"column":129}},{"source":"../../src/restError.ts","name":null,"original":{"line":7,"column":0},"generated":{"line":1,"column":137}},{"source":"../../src/restError.ts","name":null,"original":{"line":9,"column":0},"generated":{"line":1,"column":155}},{"source":"../../src/restError.ts","name":null,"original":{"line":9,"column":6},"generated":{"line":1,"column":161}},{"source":"../../src/restError.ts","name":null,"original":{"line":9,"column":23},"generated":{"line":1,"column":163}},{"source":"../../src/restError.ts","name":null,"original":{"line":9,"column":27},"generated":{"line":1,"column":167}},{"source":"../../src/restError.ts","name":null,"original":{"line":9,"column":36},"generated":{"line":1,"column":169}},{"source":"../../src/restError.ts","name":null,"original":{"line":14,"column":6},"generated":{"line":1,"column":179}},{"source":"../../src/restError.ts","name":null,"original":{"line":14,"column":13},"generated":{"line":1,"column":185}},{"source":"../../src/restError.ts","name":null,"original":{"line":14,"column":31},"generated":{"line":1,"column":195}},{"source":"../../src/restError.ts","name":null,"original":{"line":44,"column":2},"generated":{"line":1,"column":201}},{"source":"../../src/restError.ts","name":null,"original":{"line":45,"column":4},"generated":{"line":1,"column":213}},{"source":"../../src/restError.ts","name":null,"original":{"line":46,"column":4},"generated":{"line":1,"column":215}},{"source":"../../src/restError.ts","name":null,"original":{"line":47,"column":4},"generated":{"line":1,"column":217}},{"source":"../../src/restError.ts","name":null,"original":{"line":48,"column":4},"generated":{"line":1,"column":219}},{"source":"../../src/restError.ts","name":null,"original":{"line":49,"column":4},"generated":{"line":1,"column":221}},{"source":"../../src/restError.ts","name":null,"original":{"line":51,"column":4},"generated":{"line":1,"column":224}},{"source":"../../src/restError.ts","name":null,"original":{"line":51,"column":10},"generated":{"line":1,"column":230}},{"source":"../../src/restError.ts","name":null,"original":{"line":52,"column":4},"generated":{"line":1,"column":233}},{"source":"../../src/restError.ts","name":null,"original":{"line":52,"column":9},"generated":{"line":1,"column":238}},{"source":"../../src/restError.ts","name":null,"original":{"line":52,"column":16},"generated":{"line":1,"column":243}},{"source":"../../src/restError.ts","name":null,"original":{"line":53,"column":4},"generated":{"line":1,"column":255}},{"source":"../../src/restError.ts","name":null,"original":{"line":53,"column":9},"generated":{"line":1,"column":260}},{"source":"../../src/restError.ts","name":null,"original":{"line":53,"column":16},"generated":{"line":1,"column":265}},{"source":"../../src/restError.ts","name":null,"original":{"line":54,"column":4},"generated":{"line":1,"column":267}},{"source":"../../src/restError.ts","name":null,"original":{"line":54,"column":9},"generated":{"line":1,"column":272}},{"source":"../../src/restError.ts","name":null,"original":{"line":54,"column":22},"generated":{"line":1,"column":283}},{"source":"../../src/restError.ts","name":null,"original":{"line":55,"column":4},"generated":{"line":1,"column":285}},{"source":"../../src/restError.ts","name":null,"original":{"line":55,"column":9},"generated":{"line":1,"column":290}},{"source":"../../src/restError.ts","name":null,"original":{"line":55,"column":19},"generated":{"line":1,"column":298}},{"source":"../../src/restError.ts","name":null,"original":{"line":56,"column":4},"generated":{"line":1,"column":300}},{"source":"../../src/restError.ts","name":null,"original":{"line":56,"column":9},"generated":{"line":1,"column":305}},{"source":"../../src/restError.ts","name":null,"original":{"line":56,"column":20},"generated":{"line":1,"column":314}},{"source":"../../src/restError.ts","name":null,"original":{"line":58,"column":4},"generated":{"line":1,"column":316}},{"source":"../../src/restError.ts","name":null,"original":{"line":58,"column":11},"generated":{"line":1,"column":323}},{"source":"../../src/restError.ts","name":null,"original":{"line":58,"column":26},"generated":{"line":1,"column":338}},{"source":"../../src/restError.ts","name":null,"original":{"line":58,"column":32},"generated":{"line":1,"column":343}},{"source":"../../src/restError.ts","name":null,"original":{"line":58,"column":42},"generated":{"line":1,"column":345}},{"source":"../../src/restError.ts","name":null,"original":{"line":64,"column":2},"generated":{"line":1,"column":356}},{"source":"../../src/restError.ts","name":null,"original":{"line":64,"column":3},"generated":{"line":1,"column":357}},{"source":"../../src/restError.ts","name":null,"original":{"line":64,"column":9},"generated":{"line":1,"column":359}},{"source":"../../src/restError.ts","name":null,"original":{"line":65,"column":4},"generated":{"line":1,"column":369}},{"source":"../../src/restError.ts","name":null,"original":{"line":65,"column":25},"generated":{"line":1,"column":389}},{"source":"../../src/restError.ts","name":null,"original":{"line":65,"column":30},"generated":{"line":1,"column":394}},{"source":"../../src/restError.ts","name":null,"original":{"line":65,"column":44},"generated":{"line":1,"column":408}},{"source":"../../src/restError.ts","name":null,"original":{"line":65,"column":59},"generated":{"line":1,"column":410}},{"source":"../../src/restError.ts","name":null,"original":{"line":65,"column":68},"generated":{"line":1,"column":419}},{"source":"../../src/restError.ts","name":null,"original":{"line":15,"column":2},"generated":{"line":1,"column":428}},{"source":"../../src/restError.ts","name":null,"original":{"line":15,"column":2},"generated":{"line":1,"column":436}},{"source":"../../src/restError.ts","name":null,"original":{"line":15,"column":2},"generated":{"line":1,"column":446}},{"source":"../../src/restError.ts","name":null,"original":{"line":18,"column":18},"generated":{"line":1,"column":448}},{"source":"../../src/restError.ts","name":null,"original":{"line":18,"column":18},"generated":{"line":1,"column":450}},{"source":"../../src/restError.ts","name":null,"original":{"line":18,"column":47},"generated":{"line":1,"column":469}},{"source":"../../src/restError.ts","name":null,"original":{"line":22,"column":18},"generated":{"line":1,"column":490}},{"source":"../../src/restError.ts","name":null,"original":{"line":22,"column":18},"generated":{"line":1,"column":492}},{"source":"../../src/restError.ts","name":null,"original":{"line":22,"column":40},"generated":{"line":1,"column":504}}],"sources":{"../../src/restError.ts":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { HttpOperationResponse } from \"./httpOperationResponse\";\nimport { Sanitizer } from \"./util/sanitizer\";\nimport { WebResourceLike } from \"./webResource\";\nimport { custom } from \"./util/inspect\";\n\nconst errorSanitizer = new Sanitizer();\n\n/**\n * An error resulting from an HTTP request to a service endpoint.\n */\nexport class RestError extends Error {\n  /**\n   * A constant string to identify errors that may arise when making an HTTP request that indicates an issue with the transport layer (e.g. the hostname of the URL cannot be resolved via DNS.)\n   */\n  static readonly REQUEST_SEND_ERROR: string = \"REQUEST_SEND_ERROR\";\n  /**\n   * A constant string to identify errors that may arise from parsing an incoming HTTP response. Usually indicates a malformed HTTP body, such as an encoded JSON payload that is incomplete.\n   */\n  static readonly PARSE_ERROR: string = \"PARSE_ERROR\";\n\n  /**\n   * The error code, if any. Can be one of the static error code properties (REQUEST_SEND_ERROR / PARSE_ERROR) or can be a string code from an underlying system call (E_NOENT).\n   */\n  code?: string;\n  /**\n   * The HTTP status code of the response, if one was returned.\n   */\n  statusCode?: number;\n  /**\n   * Outgoing request.\n   */\n  request?: WebResourceLike;\n  /**\n   * Incoming response.\n   */\n  response?: HttpOperationResponse;\n  /**\n   * Any additional details. In the case of deserialization errors, can be the processed response.\n   */\n  details?: unknown;\n  constructor(\n    message: string,\n    code?: string,\n    statusCode?: number,\n    request?: WebResourceLike,\n    response?: HttpOperationResponse\n  ) {\n    super(message);\n    this.name = \"RestError\";\n    this.code = code;\n    this.statusCode = statusCode;\n    this.request = request;\n    this.response = response;\n\n    Object.setPrototypeOf(this, RestError.prototype);\n  }\n\n  /**\n   * Logging method for util.inspect in Node\n   */\n  [custom](): string {\n    return `RestError: ${this.message} \\n ${errorSanitizer.sanitize(this)}`;\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"8214c8586deb0540dfd1ccfbf6bce3e2","cacheData":{"env":{}}}