{"id":"GYAw","dependencies":[{"name":"C:\\Users\\ACC\\Desktop\\APH\\Acitizen-Pasco-Hub\\backend\\node_modules\\@opentelemetry\\api\\build\\esm\\diag-api.js.map","includedInParent":true,"mtime":1672192597993},{"name":"C:\\Users\\ACC\\Desktop\\APH\\Acitizen-Pasco-Hub\\backend\\package.json","includedInParent":true,"mtime":1672218648515},{"name":"C:\\Users\\ACC\\Desktop\\APH\\Acitizen-Pasco-Hub\\backend\\node_modules\\@opentelemetry\\api\\package.json","includedInParent":true,"mtime":1672192593858},{"name":"./api/diag","loc":{"line":18,"column":24,"index":739},"parent":"C:\\Users\\ACC\\Desktop\\APH\\Acitizen-Pasco-Hub\\backend\\node_modules\\@opentelemetry\\api\\build\\esm\\diag-api.js","resolved":"C:\\Users\\ACC\\Desktop\\APH\\Acitizen-Pasco-Hub\\backend\\node_modules\\@opentelemetry\\api\\build\\esm\\api\\diag.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.diag=void 0;var e=require(\"./api/diag\"),i=e.DiagAPI.instance();exports.diag=i;"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/diag-api.ts","name":null,"original":{"line":26,"column":39},"generated":{"line":1,"column":0}},{"source":"../../src/diag-api.ts","name":null,"original":{"line":26,"column":39},"generated":{"line":1,"column":13}},{"source":"../../src/diag-api.ts","name":null,"original":{"line":26,"column":39},"generated":{"line":1,"column":20}},{"source":"../../src/diag-api.ts","name":null,"original":{"line":26,"column":39},"generated":{"line":1,"column":35}},{"source":"../../src/diag-api.ts","name":null,"original":{"line":26,"column":39},"generated":{"line":1,"column":43}},{"source":"../../src/diag-api.ts","name":null,"original":{"line":26,"column":39},"generated":{"line":1,"column":56}},{"source":"../../src/diag-api.ts","name":null,"original":{"line":26,"column":39},"generated":{"line":1,"column":57}},{"source":"../../src/diag-api.ts","name":null,"original":{"line":26,"column":39},"generated":{"line":1,"column":64}},{"source":"../../src/diag-api.ts","name":null,"original":{"line":26,"column":39},"generated":{"line":1,"column":68}},{"source":"../../src/diag-api.ts","name":null,"original":{"line":26,"column":39},"generated":{"line":1,"column":76}},{"source":"../../src/diag-api.ts","name":null,"original":{"line":26,"column":39},"generated":{"line":1,"column":86}},{"source":"../../src/diag-api.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":1,"column":88}},{"source":"../../src/diag-api.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":1,"column":92}},{"source":"../../src/diag-api.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":1,"column":94}},{"source":"../../src/diag-api.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":1,"column":102}},{"source":"../../src/diag-api.ts","name":null,"original":{"line":26,"column":13},"generated":{"line":1,"column":116}},{"source":"../../src/diag-api.ts","name":null,"original":{"line":26,"column":20},"generated":{"line":1,"column":118}},{"source":"../../src/diag-api.ts","name":null,"original":{"line":26,"column":27},"generated":{"line":1,"column":120}},{"source":"../../src/diag-api.ts","name":null,"original":{"line":26,"column":28},"generated":{"line":1,"column":128}},{"source":"../../src/diag-api.ts","name":null,"original":{"line":26,"column":39},"generated":{"line":1,"column":139}},{"source":"../../src/diag-api.ts","name":null,"original":{"line":26,"column":39},"generated":{"line":1,"column":147}},{"source":"../../src/diag-api.ts","name":null,"original":{"line":26,"column":39},"generated":{"line":1,"column":152}}],"sources":{"../../src/diag-api.ts":"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Split module-level variable definition into separate files to allow\n// tree-shaking on each api instance.\nimport { DiagAPI } from './api/diag';\n/**\n * Entrypoint for Diag API.\n * Defines Diagnostic handler used for internal diagnostic logging operations.\n * The default provides a Noop DiagLogger implementation which may be changed via the\n * diag.setLogger(logger: DiagLogger) function.\n */\nexport const diag = DiagAPI.instance();\n"},"lineCount":null}},"error":null,"hash":"08f5266ce1ae8a39050aad20cd0f431d","cacheData":{"env":{}}}