{"id":"Z2oH","dependencies":[{"name":"C:\\Users\\ACC\\Desktop\\APH\\Acitizen-Pasco-Hub\\backend\\node_modules\\@azure\\core-util\\dist-esm\\src\\typeGuards.js.map","includedInParent":true,"mtime":1672192582272},{"name":"C:\\Users\\ACC\\Desktop\\APH\\Acitizen-Pasco-Hub\\backend\\package.json","includedInParent":true,"mtime":1672218648515},{"name":"C:\\Users\\ACC\\Desktop\\APH\\Acitizen-Pasco-Hub\\backend\\node_modules\\@azure\\core-util\\package.json","includedInParent":true,"mtime":1672192581348}],"generated":{"js":"\"use strict\";function e(e){return null!=e}function t(t,o){if(!e(t)||\"object\"!=typeof t)return!1;for(const e of o)if(!r(t,e))return!1;return!0}function r(t,r){return e(t)&&\"object\"==typeof t&&r in t}Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.isDefined=e,exports.isObjectWithProperties=t,exports.objectHasProperty=r;"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/typeGuards.ts","name":null,"original":{"line":46,"column":0},"generated":{"line":1,"column":0}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":8,"column":6},"generated":{"line":1,"column":13}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":8,"column":16},"generated":{"line":1,"column":22}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":8,"column":29},"generated":{"line":1,"column":24}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":9,"column":2},"generated":{"line":1,"column":27}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":9,"column":9},"generated":{"line":1,"column":34}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":9,"column":16},"generated":{"line":1,"column":40}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":17,"column":6},"generated":{"line":1,"column":42}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":17,"column":16},"generated":{"line":1,"column":51}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":18,"column":2},"generated":{"line":1,"column":53}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":19,"column":2},"generated":{"line":1,"column":55}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":21,"column":2},"generated":{"line":1,"column":58}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":21,"column":7},"generated":{"line":1,"column":62}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":21,"column":17},"generated":{"line":1,"column":64}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":21,"column":44},"generated":{"line":1,"column":68}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":21,"column":34},"generated":{"line":1,"column":85}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":22,"column":4},"generated":{"line":1,"column":87}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":22,"column":11},"generated":{"line":1,"column":94}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":25,"column":2},"generated":{"line":1,"column":96}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":25,"column":7},"generated":{"line":1,"column":100}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":25,"column":13},"generated":{"line":1,"column":106}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":25,"column":25},"generated":{"line":1,"column":111}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":26,"column":4},"generated":{"line":1,"column":113}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":26,"column":9},"generated":{"line":1,"column":117}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":26,"column":27},"generated":{"line":1,"column":119}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":26,"column":34},"generated":{"line":1,"column":121}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":27,"column":6},"generated":{"line":1,"column":124}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":27,"column":13},"generated":{"line":1,"column":131}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":31,"column":2},"generated":{"line":1,"column":133}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":31,"column":9},"generated":{"line":1,"column":140}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":39,"column":6},"generated":{"line":1,"column":142}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":39,"column":16},"generated":{"line":1,"column":151}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":40,"column":2},"generated":{"line":1,"column":153}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":41,"column":2},"generated":{"line":1,"column":155}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":43,"column":2},"generated":{"line":1,"column":158}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":44,"column":4},"generated":{"line":1,"column":165}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":44,"column":14},"generated":{"line":1,"column":167}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":44,"column":41},"generated":{"line":1,"column":171}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":44,"column":31},"generated":{"line":1,"column":188}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":44,"column":53},"generated":{"line":1,"column":191}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":44,"column":66},"generated":{"line":1,"column":196}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":46,"column":0},"generated":{"line":1,"column":198}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":46,"column":0},"generated":{"line":1,"column":205}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":46,"column":0},"generated":{"line":1,"column":220}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":46,"column":0},"generated":{"line":1,"column":228}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":46,"column":0},"generated":{"line":1,"column":241}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":46,"column":0},"generated":{"line":1,"column":242}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":46,"column":0},"generated":{"line":1,"column":249}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":46,"column":0},"generated":{"line":1,"column":253}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":46,"column":0},"generated":{"line":1,"column":261}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":46,"column":0},"generated":{"line":1,"column":271}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":46,"column":0},"generated":{"line":1,"column":273}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":46,"column":0},"generated":{"line":1,"column":281}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":46,"column":0},"generated":{"line":1,"column":304}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":46,"column":0},"generated":{"line":1,"column":306}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":46,"column":0},"generated":{"line":1,"column":314}},{"source":"../../src/typeGuards.ts","name":null,"original":{"line":46,"column":0},"generated":{"line":1,"column":332}}],"sources":{"../../src/typeGuards.ts":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * Helper TypeGuard that checks if something is defined or not.\n * @param thing - Anything\n */\nexport function isDefined<T>(thing: T | undefined | null): thing is T {\n  return typeof thing !== \"undefined\" && thing !== null;\n}\n\n/**\n * Helper TypeGuard that checks if the input is an object with the specified properties.\n * @param thing - Anything.\n * @param properties - The name of the properties that should appear in the object.\n */\nexport function isObjectWithProperties<Thing, PropertyName extends string>(\n  thing: Thing,\n  properties: PropertyName[]\n): thing is Thing & Record<PropertyName, unknown> {\n  if (!isDefined(thing) || typeof thing !== \"object\") {\n    return false;\n  }\n\n  for (const property of properties) {\n    if (!objectHasProperty(thing, property)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Helper TypeGuard that checks if the input is an object with the specified property.\n * @param thing - Any object.\n * @param property - The name of the property that should appear in the object.\n */\nexport function objectHasProperty<Thing, PropertyName extends string>(\n  thing: Thing,\n  property: PropertyName\n): thing is Thing & Record<PropertyName, unknown> {\n  return (\n    isDefined(thing) && typeof thing === \"object\" && property in (thing as Record<string, unknown>)\n  );\n}\n"},"lineCount":null}},"error":null,"hash":"f5c0a8c81773f56a21403df66e5ec611","cacheData":{"env":{}}}